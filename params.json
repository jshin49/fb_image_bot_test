{
  "name": "Fb image bot test",
  "tagline": "Sending and receiving images example via Facebook Messenger Platform",
  "body": "# fb_image_bot_test\r\nSending and receiving images example via Facebook Messenger Platform\r\n\r\nFirst check out the [Quickstart Guide](https://developers.facebook.com/docs/messenger-platform/quickstart) provided by Facebook.\r\n\r\n## Running Locally\r\n0. Install Node and NPM and ngrok (or localtunnel)\r\n1. Run \"sudo npm install\" command to install external modules locally\r\n2. Run \"node app.js\" to run the app\r\n3. Enter localhost:8080 on the web url to check (All static files are served in the 'public' folder)\r\n4. Enter ngrok http 8080 to tunnel a connection from https://foo.ngrok.io to localhost\r\n5. Give https://foo.ngrok.io/webhook for your webhook verificaiton URL in the Messenger App settings\r\n6. Now for every message, you can check the response and request through your console.\r\n\r\n## Running on Heroku\r\n0. Do steps 0~1 from above and install Heroku toolbelt from the Heroku website\r\n1. Run \"heroku login\"\r\n2. If existing repository, simply add a remote to heroku with this command: heroku git:remote -a YOUR_HEROKU_APP\r\n3. Else, run the following codes\r\n\r\n  $ heroku git:clone -a image-bot-test\r\n  $ cd image-bot-test\r\n  $ git add .\r\n  $ git commit -am \"make it better\"\r\n  $ git push heroku master\r\n\r\n4. Give https://yourheroku.herokuapp.com/webhook for your webhook verificaiton URL in the Messenger App settings\r\n5. Voila :)\r\n\r\nYou can checkout our coding standards for [Node.js](blob/master/nodejs.md) and [Python](blob/master/python27.md).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}